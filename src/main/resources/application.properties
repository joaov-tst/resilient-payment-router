spring.application.name=resilient-payment-router
server.port=8080
processor.default.url=${PROCESSOR_DEFAULT_URL:http://localhost:8001}
processor.fallback.url=${PROCESSOR_FALLBACK_URL:http://localhost:8002}
management.endpoints.enabled=health,info
spring.main.lazy-initialization=true

processor.healthcheck.interval= 5000
processor.healthcheck.default-timeout-threshold= 500
feign.client.config.default.connectTimeout= 300ms
feign.client.config.default.readTimeout= 500ms


# CIRCUIT BREAKER
resilience4j.circuitbreaker.instances.paymentProcessor.failureRateThreshold= 50
resilience4j.circuitbreaker.instances.paymentProcessor.waitDurationInOpenState= 5s
resilience4j.circuitbreaker.instances.paymentProcessor.slidingWindowSize= 10
resilience4j.circuitbreaker.instances.paymentProcessor.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.paymentProcessor.failOnExceptions=com.challenge.resilient_payment_router.exceptions.ProcessorUnavailableException
resilience4j.circuitbreaker.instances.paymentProcessor.base-config.record-exceptions=java.io.IOException,feign.FeignException,com.challenge.resilient_payment_router.exceptions.ProcessorUnavailableException


# Retry (paymentProcessorRetry)
# resilience4j.retry.instances.paymentProcessorRetry.maxAttempts=3
# resilience4j.retry.instances.paymentProcessorRetry.waitDuration=200ms
# resilience4j.retry.instances.paymentProcessorRetry.retryExceptions=org.springframework.web.client.ResourceAccessException,java.util.concurrent.TimeoutException
# resilience4j.retry.instances.paymentProcessorRetry.ignoreExceptions=com.challenge.resilient_payment_router.exceptions.ProcessorUnavailableException